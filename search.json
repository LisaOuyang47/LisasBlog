[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Data-Analysis-of-Amazon-Sales-Dataset.html",
    "href": "posts/Data-Analysis-of-Amazon-Sales-Dataset.html",
    "title": "lisasblog",
    "section": "",
    "text": "This Amazon sales dataset contains reviews and ratings for information on over a thousand products. In the dataset, product IDs, names, categories, product descriptions, links to product photos and links to their official websites are listed; various prices (before, after, and percentages of discounts) are also available; and finally, users’ ratings and reviews of the products they purchased, including their personal information (IDs and names) are also included in this dataset.\n\n\n\nAmazon Sales Dataset came from Kaggle website. This dataset was scraped from the official Amazon website via BeautifulSoup and WebDriver in Python by KARKAVELRAJA J (owner).\n\n\n\nOut of personal interest, I am personally more interested in the relationship between consumer behavior and corporate behaviors in the marketplace. This is especially true for a multinational company as large as Amazon, which has a business that spans basically the entire world. When a company of this size can operate successfully, the idea of analyzing its sales data is something that nobody can resist. And because of my passion for digital humanities, I think it is a very worthwhile thing to do sentiment analysis on Amazon’s user reviews. Not only can we understand certain specific needs of users, but we can also have predictions about consumer behavior, which contributes to the company’s ability to better improve on a humanistic basis, thus boosting sales and stabilizing its customer base.\n\n\n\n(Might change based on findings)\nBased on the data set and my interests, I decided to focus my interest in solving the following problems: - What are the most popular categories of products?\na. What is the overall sentiment of users towards such products? What is particularly noteworthy?\n\nWhat is the relationship between product price and user rating?\n\na. Are there cases in which prices are manipulated (price increase, then price decrease) to gain sales for profit?\n\nWhat is the overall sentiment of the user? How can we learn about e-commerce through user reviews?"
  },
  {
    "objectID": "posts/Data-Analysis-of-Amazon-Sales-Dataset.html#exploratory-data-visualizations",
    "href": "posts/Data-Analysis-of-Amazon-Sales-Dataset.html#exploratory-data-visualizations",
    "title": "lisasblog",
    "section": "Exploratory Data Visualizations",
    "text": "Exploratory Data Visualizations\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n\n# What's the most common rating in this dataset?\ndf['rating'].plot(kind = 'hist', bins = 10, color = 'lightblue', title = 'Rating Frequency');\n\n\n\n\n\n# Boxplot of discount percentage\ndf.plot(y = 'discount_percentage', kind = 'box');\n\n\n\n\n\n# Percentage frequency of discounts for products with ratings greater than 4.0 \ntruncted_data = df.loc[df['rating'] > 4.0]\n\ntruncted_data.plot.hist(y = 'discount_percentage', color = 'lightblue', bins = 5);\n\n<AxesSubplot: ylabel='Frequency'>\n\n\n\n\n\n\ndf['category'].unique()\n\n\n# Cleaning Product Category\ndf['grouped_category'] = df['category'].str.split('|').str[0]\ndf.drop('category', axis=1, inplace=True)\n\nKeyError: 'category'\n\n\n\ndf['grouped_category'].unique()\n\narray(['Computers&Accessories', 'Electronics', 'MusicalInstruments',\n       'OfficeProducts', 'Home&Kitchen', 'HomeImprovement', 'Toys&Games',\n       'Car&Motorbike', 'Health&PersonalCare'], dtype=object)\n\n\n\ngrouped_data = df.groupby(['grouped_category'])\ngrouped_data1 = df.groupby(['grouped_category'])['grouped_category'].count()\n\ngrouped_data1.plot(y = 'grouped_category', kind = 'hist', \n                   bins = 10, color = 'bisque', \n                   title = 'Most frequent product category');\n\n# need to polish-change x-axis' name?\n\n\n\n\n\ngrouped_data1\n\ngrouped_category\nCar&Motorbike              1\nComputers&Accessories    451\nElectronics              526\nHealth&PersonalCare        1\nHome&Kitchen             447\nHomeImprovement            2\nMusicalInstruments         2\nOfficeProducts            31\nToys&Games                 1\nName: grouped_category, dtype: int64\n\n\n\n# Average product discount percentage per category\ngrouped_data['discount_percentage','grouped_category'].mean().sort_values(\n    by='discount_percentage', ascending=False).plot(\n    kind = 'bar', color = 'lightgreen');\n\n/tmp/ipykernel_204/36321793.py:3: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n  grouped_data['discount_percentage','grouped_category'].mean().sort_values(\n/tmp/ipykernel_204/36321793.py:3: FutureWarning: The default value of numeric_only in DataFrameGroupBy.mean is deprecated. In a future version, numeric_only will default to False. Either specify numeric_only or select only columns which should be valid for the function.\n  grouped_data['discount_percentage','grouped_category'].mean().sort_values("
  },
  {
    "objectID": "posts/first_file.html",
    "href": "posts/first_file.html",
    "title": "First File",
    "section": "",
    "text": "## \n\n\n3 + 3\n\n6\n\n\n\nimport matplotlib.pyplot as plt\n\n\nplt.plot([1,5,3], \"ko\")"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "lisasblog",
    "section": "",
    "text": "Introduction\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\nFirst File\n\n\n\n\n\nTesting Quarto\n\n\n\n\n\n\nMar 6, 2023\n\n\nLisa Ouyang\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 6, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 3, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]